{"ast":null,"code":"var _jsxFileName = \"/home/aasdia/Documents/GainBNB/react-xlite-repo/src/App.js\";\nimport './App.css';\nimport React, { Component } from \"react\";\nimport getWeb3 from \"./getWeb3\"; //import Dashboard from './Dashboard';\n// import {Cards} from './Components/Cards';\n\nimport { TopNavBar } from './Components/TopNavBar';\nimport { StatisticCards, TransactionsCards } from './Components/StatisticCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getWeb = async () => {\n      try {\n        // Get network provider and web3 instance.\n        console.log(\"inside getweb\");\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts();\n        const defaultAccount = accounts[0];\n        const balance = await web3.eth.getBalance(accounts[0]);\n        console.log(web3.utils.fromWei(balance)); // accounts = web3.utils.toChecksumAddress(accounts[0]);\n        // console.log(web3.utils.isAddress(defaultAccount));\n        // console.log(accounts);\n        // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        console.log(\"Network ID \" + networkId); // const instance = new web3.eth.Contract(\n        //   abi,\n        //   deployedNetwork.address,\n        // );\n        // console.log(instance);\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          accounts,\n          balance,\n          connected: true\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.withdraw = async () => {\n      alert(\"Withdraw\");\n      const {\n        web3\n      } = this.state;\n    };\n\n    this.deposit = async () => {\n      alert(\"Deposit\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(TopNavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: /*#__PURE__*/_jsxDEV(StatisticCards, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(TransactionsCards, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aasdia/Documents/GainBNB/react-xlite-repo/src/App.js"],"names":["React","Component","getWeb3","TopNavBar","StatisticCards","TransactionsCards","App","getWeb","console","log","web3","accounts","eth","getAccounts","defaultAccount","balance","getBalance","utils","fromWei","networkId","net","getId","setState","connected","error","alert","withdraw","state","deposit","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AACA;;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,6BAAhD;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAE1BM,MAF0B,GAEjB,YAAY;AACnB,UAAI;AACF;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,cAAMC,IAAI,GAAG,MAAMR,OAAO,EAA1B,CAHE,CAIF;;AACA,cAAMS,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMC,cAAc,GAAGH,QAAQ,CAAC,CAAD,CAA/B;AACA,cAAMI,OAAO,GAAG,MAAML,IAAI,CAACE,GAAL,CAASI,UAAT,CAAoBL,QAAQ,CAAC,CAAD,CAA5B,CAAtB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACO,KAAL,CAAWC,OAAX,CAAmBH,OAAnB,CAAZ,EARE,CASF;AACA;AACA;AACA;;AACA,cAAMI,SAAS,GAAG,MAAMT,IAAI,CAACE,GAAL,CAASQ,GAAT,CAAaC,KAAb,EAAxB;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBU,SAA5B,EAdE,CAeF;AACA;AACA;AACA;AACE;AACF;AACA;;AACE,aAAKG,QAAL,CAAc;AAACZ,UAAAA,IAAD;AAAOC,UAAAA,QAAP;AAAgBI,UAAAA,OAAhB;AAAyBQ,UAAAA,SAAS,EAAC;AAAnC,SAAd;AACH,OAvBD,CAuBE,OAAOC,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,CACF,wEADE,CAAL;AAGAjB,QAAAA,OAAO,CAACgB,KAAR,CAAcA,KAAd;AACD;AACF,KAjCyB;;AAAA,SAmC1BE,QAnC0B,GAmCf,YACX;AACED,MAAAA,KAAK,CAAC,UAAD,CAAL;AACA,YAAM;AAACf,QAAAA;AAAD,UAAS,KAAKiB,KAApB;AAED,KAxCyB;;AAAA,SA0C1BC,OA1C0B,GA0ChB,YACV;AACEH,MAAAA,KAAK,CAAC,SAAD,CAAL;AACD,KA7CyB;AAAA;;AA+C1BI,EAAAA,MAAM,GAAG;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,+BACG,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA7D2B;;AAgE5B,eAAevB,GAAf","sourcesContent":["import './App.css';\nimport React, { Component } from \"react\";\nimport getWeb3 from \"./getWeb3\";\n//import Dashboard from './Dashboard';\n// import {Cards} from './Components/Cards';\nimport {TopNavBar} from './Components/TopNavBar';\nimport {StatisticCards, TransactionsCards} from './Components/StatisticCards';\n\nclass App extends Component {\n\n  getWeb = async () => {\n    try {\n      // Get network provider and web3 instance.\n      console.log(\"inside getweb\");\n      const web3 = await getWeb3();\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      const defaultAccount = accounts[0];\n      const balance = await web3.eth.getBalance(accounts[0]);\n      console.log(web3.utils.fromWei(balance));\n      // accounts = web3.utils.toChecksumAddress(accounts[0]);\n      // console.log(web3.utils.isAddress(defaultAccount));\n      // console.log(accounts);\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      console.log(\"Network ID \" + networkId);\n      // const instance = new web3.eth.Contract(\n      //   abi,\n      //   deployedNetwork.address,\n      // );\n        // console.log(instance);\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n        this.setState({web3, accounts,balance ,connected:true});\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  withdraw = async ()  =>\n  {\n    alert(\"Withdraw\");\n    const {web3} = this.state;\n   \n  }\n\n  deposit = async ()  =>\n  {\n    alert(\"Deposit\");\n  }\n\n  render() {\n    return(\n        <div className=\"container\">\n          <div className=\"navbar\" >\n              <TopNavBar/>\n          </div>\n          <div className=\"cards\">\n              <StatisticCards/>\n          </div>\n          <div className=\"\">\n             <TransactionsCards/>\n          </div>\n        </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}