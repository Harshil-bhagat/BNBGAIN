{"ast":null,"code":"var _jsxFileName = \"/home/aasdia/Documents/GainBNB/BNBGain/src/Components/TopNavBar.js\";\nimport React, { Component } from 'react';\nimport { Navbar, Button } from 'react-bootstrap';\nimport './comp.css';\nimport getWeb3 from \"../getWeb3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class TopNavBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getWeb = async () => {\n      try {\n        // Get network provider and web3 instance.\n        console.log(\"inside getweb\");\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts();\n        let account = accounts[0]; //Check Account Balance\n\n        let accbalance = await web3.eth.getBalance(accounts[0]);\n        accbalance = web3.utils.fromWei(accbalance); // Get the contract instance.\n        // const networkId = await web3.eth.net.getId();\n\n        const SendMoneyContract = new web3.eth.Contract(this.ABI, this.ContractAddress);\n        SendMoneyContract.options.address = this.ContractAddress;\n        let conBalance = await web3.eth.getBalance(this.ContractAddress);\n        conBalance = web3.utils.fromWei(conBalance); // let sendToContract = await instance.methods.receiveMoney().send({from:account,to:this.ContractAddress, value:web3.utils.toWei('5', 'ether')});\n        // console.log(sendToContract);\n        // let value = await web3.utils.toWei('1', 'ether');\n        // const receipt = await instance.methods.withdrawMoney(value).send({from:account});\n\n        this.setState({\n          web3,\n          account,\n          accountBalance: accbalance,\n          contract: this.ContractAddress,\n          contractBalance: conBalance,\n          connected: true\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        id: \"topnav\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          id: \"btnConnect\",\n          onClick: this.getWeb,\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aasdia/Documents/GainBNB/BNBGain/src/Components/TopNavBar.js"],"names":["React","Component","Navbar","Button","getWeb3","TopNavBar","getWeb","console","log","web3","accounts","eth","getAccounts","account","accbalance","getBalance","utils","fromWei","SendMoneyContract","Contract","ABI","ContractAddress","options","address","conBalance","setState","accountBalance","contract","contractBalance","connected","error","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,MAAhB,QAA6B,iBAA7B;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAGA,OAAO,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAErCK,MAFqC,GAE5B,YAAY;AACjB,UAAI;AACF;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,cAAMC,IAAI,GAAG,MAAML,OAAO,EAA1B,CAHE,CAIF;;AACA,cAAMM,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB;AACA,YAAIC,OAAO,GAAGH,QAAQ,CAAC,CAAD,CAAtB,CANE,CAQF;;AACA,YAAII,UAAU,GAAG,MAAML,IAAI,CAACE,GAAL,CAASI,UAAT,CAAoBL,QAAQ,CAAC,CAAD,CAA5B,CAAvB;AACAI,QAAAA,UAAU,GAAGL,IAAI,CAACO,KAAL,CAAWC,OAAX,CAAmBH,UAAnB,CAAb,CAVE,CAYF;AACA;;AACA,cAAMI,iBAAiB,GAAG,IAAIT,IAAI,CAACE,GAAL,CAASQ,QAAb,CAAsB,KAAKC,GAA3B,EAA+B,KAAKC,eAApC,CAA1B;AACAH,QAAAA,iBAAiB,CAACI,OAAlB,CAA0BC,OAA1B,GAAoC,KAAKF,eAAzC;AACA,YAAIG,UAAU,GAAG,MAAMf,IAAI,CAACE,GAAL,CAASI,UAAT,CAAoB,KAAKM,eAAzB,CAAvB;AACAG,QAAAA,UAAU,GAAEf,IAAI,CAACO,KAAL,CAAWC,OAAX,CAAmBO,UAAnB,CAAZ,CAjBE,CAkBF;AACA;AACA;AACA;;AACA,aAAKC,QAAL,CAAc;AAAEhB,UAAAA,IAAF;AAAQI,UAAAA,OAAR;AAAiBa,UAAAA,cAAc,EAAEZ,UAAjC;AAA6Ca,UAAAA,QAAQ,EAAC,KAAKN,eAA3D;AAA4EO,UAAAA,eAAe,EAAEJ,UAA7F;AAAyGK,UAAAA,SAAS,EAAE;AAApH,SAAd;AACD,OAvBD,CAuBE,OAAOC,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,CACF,wEADE,CAAL;AAGAxB,QAAAA,OAAO,CAACuB,KAAR,CAAcA,KAAd;AACD;AACF,KAjCkC;AAAA;;AAkCzCE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,iBAAhB;AAAkC,UAAA,EAAE,EAAC,YAArC;AAAkD,UAAA,OAAO,EAAE,KAAK1B,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA1CwC","sourcesContent":["import React, {Component} from 'react';\nimport {Navbar, Button} from 'react-bootstrap';\nimport './comp.css';\nimport getWeb3 from \"../getWeb3\";\n\n\nexport class TopNavBar extends Component {\n\n    getWeb = async () => {\n        try {\n          // Get network provider and web3 instance.\n          console.log(\"inside getweb\");\n          const web3 = await getWeb3();\n          // Use web3 to get the user's accounts.\n          const accounts = await web3.eth.getAccounts();\n          let account = accounts[0];\n    \n          //Check Account Balance\n          let accbalance = await web3.eth.getBalance(accounts[0]);\n          accbalance = web3.utils.fromWei(accbalance);\n          \n          // Get the contract instance.\n          // const networkId = await web3.eth.net.getId();\n          const SendMoneyContract = new web3.eth.Contract(this.ABI,this.ContractAddress);\n          SendMoneyContract.options.address = this.ContractAddress;\n          let conBalance = await web3.eth.getBalance(this.ContractAddress);\n          conBalance= web3.utils.fromWei(conBalance);\n          // let sendToContract = await instance.methods.receiveMoney().send({from:account,to:this.ContractAddress, value:web3.utils.toWei('5', 'ether')});\n          // console.log(sendToContract);\n          // let value = await web3.utils.toWei('1', 'ether');\n          // const receipt = await instance.methods.withdrawMoney(value).send({from:account});\n          this.setState({ web3, account, accountBalance: accbalance, contract:this.ContractAddress, contractBalance: conBalance, connected: true });\n        } catch (error) {\n          // Catch any errors for any of the above operations.\n          alert(\n            `Failed to load web3, accounts, or contract. Check console for details.`,\n          );\n          console.error(error);\n        }\n      };\nrender(){\n    return (\n        <div className=\"navbar\">\n            <Navbar id=\"topnav\">\n                <Button variant=\"outline-primary\" id=\"btnConnect\" onClick={this.getWeb}>Connect</Button>\n            </Navbar>\n        </div>\n    )\n}\n}"]},"metadata":{},"sourceType":"module"}